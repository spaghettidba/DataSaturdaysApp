@using DataSaturdays.Core.Entities
@using DataSaturdays.Core.Services
@using Microsoft.AspNetCore.Identity

@inject IEventService _eventService

<div class="row">
    <div class=" col-xl-8 offset-xl-2 col-lg-10 offset-lg-1 ">

        <h1 class="nav-item text-truncate text-center">
            <a class="btn btn-primary btn-xl text-uppercase js-scroll-trigger" href="/EventEdit/@Guid.Empty">
                CREATE EVENT
            </a>
        </h1>

        <div id="events-out" class="row align-content-center page-section">
            <div id="events">
                <h2 class="section-heading text-uppercase pt-4">My Events</h2>
            </div>
            <div class="row justify-content-center">
                <div class="col-auto">
                    <table table="" cellspacing="0" class="table-responsive table-striped table-hover mt-3 justify-content-center" id="eventlist" width="100%">
                        <thead>
                            <tr>
                                <th scope="col"></th>
                                <th scope="col">Event Name</th>
                                <th scope="col">Date</th>
                                <th scope="col"></th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (eventList != null && eventList.Any())
                            {
                                @foreach (var item in eventList.OrderBy(s => s.Date))
                                {
                                    <tr>
                                        <td>
                                            <div class="hero-box mt-3">
                                                <a href="/EventEdit/@item.Id">
                                                    <img src="assets/design/logo/10.png" height="65">
                                                </a>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="hero-box mt-3 flex-nowrap text-uppercase">
                                                <a href="/EventEdit/@item.Id">
                                                    <div class="nav-link">@item.Name</div>
                                                </a>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="hero-box mt-3 flex-nowrap">
                                                <div class="nav-link">@item.Date.ToString("dd MMMM yyyy")</div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="hero-box">
                                                <button onclick="@(() => DeleteEvent(item))" class="btn btn-danger">Delete Event</button>
                                            </div>
                                        </td>
                                        @if(IsAdmin)
                                        {
                                            @if (!item.Published)
                                            {
                                                <td>
                                                    <div class="hero-box">
                                                        <button onclick="@(() => PublishEvent(item))" class="btn btn-primary">Publish</button>
                                                    </div>
                                                </td>
                                            }
                                            else
                                            {
                                                <td>
                                                    <div class="hero-box">
                                                        <button class="btn btn-secondary" disabled>Published</button>
                                                    </div>
                                                </td>
                                            }
                                        }
                                    </tr>
                                }
                            }                            
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string CurrentUser { get; set; }
    [Parameter] public bool IsAdmin { get; set; }
    private IEnumerable<Event> Events;
    List<Event> eventList;

    protected override async Task OnInitializedAsync()
    {
        if (IsAdmin)
        {
            Events = await _eventService.GetEventsByAdmin();
        }
        else
        {
            Events = await _eventService.GetEventsByUserNameAsync(CurrentUser);
        }
        eventList = new List<Event>(Events);
        StateHasChanged();
    }
    private async void DeleteEvent(Event Eve)
    {
        await _eventService.DeleteEvent(Eve);
        eventList.Remove(Eve);
        StateHasChanged();
    }
    private async void PublishEvent(Event Eve)
    {
        Eve.Published = true;
        await _eventService.PublishEvent(Eve);
        StateHasChanged();
    }
    
}
